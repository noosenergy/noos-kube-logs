# Logging configuration for service events

pipeline:
  inputs:
    - name: forward
      tag_prefix: "services."
      listen: 0.0.0.0
      port: 24224

  filters:
    # Dynamically restructure log format
    # move all keys except timestamp under 'log_object'
    - name: lua
      match: "services.*"
      script: /fluent-bit/etc/restructure_log.lua
      call: restructure_log

    # Re-emit log record with "slack" tag
    - name: rewrite_tag
      match: "services.*"
      rule:
        - "$log_object['event'] ^.*$ slack.$TAG true"

    # Format records for Slack blocks
    - name: lua
      match: "slack.services.*"
      script: format_slack_msg.lua
      call: format_slack_msg

  outputs:
    # Push only "slack" tagged logs to Slack
    - name: http
      match: "slack.services.*"
      host: ${FLUENTBIT__SLACK_HOST}
      port: 443
      tls: on
      uri: /services/${FLUENTBIT__SLACK_TOKEN}
      header: Content-Type application/json
      format: json_lines

    # Push unformatted "raw" logs to Loggly, Logzio and Datadog
    - name: http
      match: "services.*"
      storage.total_limit_size: 5M
      host: ${FLUENTBIT__LOGGLY_HOST}
      port: 443
      uri: /bulk/${FLUENTBIT__LOGGLY_TOKEN}/tag/bulk/
      header: Content-Type application/json
      format: json_lines
      tls: on
      tls.verify: on
      retry_limit: 5
      json_date_key: false

    - name: http
      match: "services.*"
      storage.total_limit_size: 5M
      host: ${FLUENTBIT__LOGZIO_HOST}
      port: 8071
      uri: ?token=${FLUENTBIT__LOGZIO_TOKEN}
      header: Content-Type application/json
      format: json_lines
      tls: on
      tls.verify: on
      retry_limit: 5
      json_date_key: false

    - name: datadog
      match: "services.*"
      host: ${FLUENTBIT__DATADOG_HOST}
      tls: on
      compress: gzip
      apikey: ${FLUENTBIT__DATADOG_API_KEY}
      dd_service: neptune
      dd_source: kubernetes
      dd_tags: env:prod
      dd_message_key: log
